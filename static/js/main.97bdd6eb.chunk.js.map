{"version":3,"sources":["App.module.scss","components/Score/Score.module.scss","components/GameArea/GameArea.module.scss","components/WinnerScreen/WinnerScreen.module.scss","components/Score/Score.js","components/GameArea/GameArea.js","components/WinnerScreen/WinnerScreen.js","App.js","index.js"],"names":["module","exports","Score","props","className","styles","score","winCount","labelName","GameArea","gameField","map","element","index","onClick","clickInfo","WinnerScreen","divStyle","display","opacity","transition","style","newGame","winner","App","state","Array","fill","winnerPosition","whoWin","sortPosition","whoseStep","indexElment","arrCopy","JSON","parse","stringify","this","setState","value","array","findWinner","arrWinnerPos","arrSortPos","stop","t","push","i","firstCollection","forEach","from","Set","concat","length","showWinner","every","e","combinationArray","nameWinner","openWindow","copyscore","setTimeout","visible","clearTimeout","AppContainer","bind","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.97bdd6eb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"AppContainer\":\"App_AppContainer__1XTUJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"score\":\"Score_score__1Ctd3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"GameArea\":\"GameArea_GameArea__2seHh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WinnerScreen\":\"WinnerScreen_WinnerScreen__1APjO\"};","import React from \"react\";\r\nimport styles from \"./Score.module.scss\";\r\n\r\nconst Score = (props) => {\r\n  return (\r\n    <span className={props.className === \"score\" ? styles.score : null}>\r\n      {props.className === props.winCount\r\n        ? props.labelName\r\n        : `${props.labelName}: ${props.winCount}`}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default Score;\r\n","import React from \"react\";\r\nimport styles from \"./GameArea.module.scss\";\r\n\r\nconst GameArea = (props) => {\r\n  return props.gameField.map((element, index) => (\r\n    <div className={styles.GameArea} onClick={() => props.clickInfo(index)}>\r\n      {element}\r\n    </div>\r\n  ));\r\n};\r\n\r\nexport default GameArea;\r\n","import React from \"react\";\r\nimport styles from \"./WinnerScreen.module.scss\";\r\nconst WinnerScreen = (props) => {\r\n  let divStyle = {\r\n    display: props.display,\r\n    opacity: props.opacity,\r\n    transition: \"opacity 0.7s ease\",\r\n  };\r\n//  console.log(divStyle);\r\n\r\n  return (\r\n    <div\r\n      style={divStyle}\r\n      className={styles.WinnerScreen}\r\n      onClick={() => props.newGame(props.winner)}\r\n    >\r\n      <span> winner: {props.winner}</span>\r\n      <span> Press screen to continue </span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WinnerScreen;\r\n","import React from \"react\";\nimport styles from \"./App.module.scss\";\nimport Score from \"./components/Score/Score.js\";\nimport GameArea from \"./components/GameArea/GameArea.js\";\nimport WinnerScreen from \"./components/WinnerScreen/WinnerScreen.js\";\n\nclass App extends React.Component {\n  state = {\n    //gameField: [\"O\", \"O\", \"X\", \"X\", \"X\", \"O\", null, \"X\", \"O\"],\n    gameField: new Array(9).fill(null),\n    // prettier-ignore\n    winnerPosition: [\n      0,1,2,\n      3,4,5,\n      6,7,8,\n      0,3,6,\n      1,4,7,\n      2,5,8,\n      0,4,8,\n      2,4,6 ],\n    whoWin: null,\n    sortPosition: [[], []],\n    score: [0, 0],\n    whoseStep: true, // true - X   false - O\n    //----------------------------------------------\n    display: \"none\",\n    opacity: 0,\n  };\n\n  clickInfo(indexElment) {\n    let arrCopy = JSON.parse(JSON.stringify(this.state.gameField));\n\n    // console.log(`index = ${indexElment}`);\n    // console.log(this.state.whoseStep ? \"X\" : \"O\");\n\n    if (arrCopy[indexElment] === null) {\n      this.setState(\n        {\n          gameField: arrCopy.map((value, index, array) =>\n            index === indexElment\n              ? (value = this.state.whoseStep ? \"X\" : \"O\")\n              : value\n          ),\n          whoseStep: !this.state.whoseStep,\n        },\n        () => this.findWinner(this.state.gameField)\n      );\n    }\n  }\n\n  findWinner(arrCopy) {\n    let arrWinnerPos = JSON.parse(JSON.stringify(this.state.winnerPosition));\n    let arrSortPos = [[], []];\n    let stop = true;\n    let t = 0;\n\n    arrCopy.map((value, index) => {\n      value === \"X\" && value !== null\n        ? arrSortPos[0].push(index)\n        : value === \"O\" && value !== null\n        ? arrSortPos[1].push(index)\n        : (() => {})();\n    });\n\n    for (let i = 0; i < arrWinnerPos.length; i = i + 3) {\n      let firstCollection = [\n        arrWinnerPos[i],\n        arrWinnerPos[i + 1],\n        arrWinnerPos[i + 2],\n      ];\n\n      //console.log(firstCollection);\n      arrSortPos.forEach((value, index, array) => {\n        // console.log(firstCollection, array[index], index === 0 ? \"X\" : \"O\");\n        // :console.log(firstCollection,'Filed')\n\n        if (stop) {\n          if (\n            Array.from(new Set(array[index].concat(firstCollection))).length ===\n            array[index].length\n          ) {\n            // console.log(\"WINNER\");\n            this.showWinner(firstCollection, index === 0 ? \"X\" : \"O\");\n            stop = false;\n          } else if (arrCopy.every((e) => e !== null)) {\n            if (t === 0) {\n              //  console.log(\"LOSSER\");\n              //  console.log(arrCopy);\n              //  console.log(arrSortPos);\n              this.showWinner(\"No winner\", \"A Draw :(\");\n              t = 1;\n            }\n          }\n        }\n      });\n\n      // arrSortPos.map((value, index, array) =>\n      //   Array.from(new Set(array[index].concat(firstCollection))).length ===\n      //   array[index].length\n      //     ? this.showWinner(firstCollection, index === 0 ? \"X\" : \"O\")\n      //     : //console.log(firstCollection, array[index], index === 0 ? \"X\" : \"O\")\n      //       // :console.log(firstCollection,'Filed')\n      //       // (arrCopy.every(e=>e !== null)==true)? this.showWinner('No winner','A Draw :('):null\n      //       null\n\n      // );\n    }\n\n    this.setState({\n      sortPosition: arrSortPos,\n    });\n  }\n\n  showWinner(combinationArray, nameWinner) {\n    //   console.log(combinationArray, nameWinner);\n    this.setState(\n      { whoWin: this.state.whoWin !== null ? null : nameWinner },\n      () => this.openWindow()\n    );\n  }\n\n  newGame(nameWinner) {\n    if (this.state.opacity === 0) {\n      return;\n    }\n\n    let copyscore = this.state.score;\n    if (nameWinner === \"X\") {\n      copyscore[0] = copyscore[0] + 1;\n    } else if (nameWinner === \"O\") {\n      copyscore[1] = copyscore[1] + 1;\n    } else if (nameWinner.length > 3) {\n      //   console.log(\"no WINNER\");\n    }\n    this.setState(\n      {\n        score: copyscore,\n        gameField: new Array(9).fill(null),\n        whoseStep: true,\n      },\n      () => this.openWindow()\n    );\n  }\n\n  openWindow() {\n    if (this.state.display === \"none\") {\n      this.setState({ display: \"flex\" });\n      setTimeout(() => this.setState({ opacity: 1, visible: true }), 100);\n      clearTimeout();\n    }\n    if (this.state.display === \"flex\") {\n      this.setState({ opacity: 0, visible: false });\n      setTimeout(\n        () => this.setState({ display: \"none\", visible: false, whoWin: null }),\n        700\n      );\n      clearTimeout();\n    }\n  }\n\n  render() {\n    return (\n      <div className={styles.AppContainer}>\n        <header>\n          <Score\n            className=\"score\"\n            labelName=\"X\"\n            winCount={this.state.score[0]}\n          />\n          <Score labelName=\"Tic Tac Toe\" />\n          <Score\n            className=\"score\"\n            labelName=\"O\"\n            winCount={this.state.score[1]}\n          />\n        </header>\n\n        {this.state.whoWin !== null ? (\n          <WinnerScreen\n            winner={this.state.whoWin}\n            newGame={this.newGame.bind(this)}\n            display={this.state.display}\n            opacity={this.state.opacity}\n          />\n        ) : null}\n\n        <center>\n          <GameArea\n            gameField={this.state.gameField}\n            clickInfo={this.clickInfo.bind(this)}\n          />\n        </center>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}